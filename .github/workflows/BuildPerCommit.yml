# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    permissions: write-all

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: |
        ./gradlew build

        export MOD_VERSION_PACKAGE=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2)
        export MOD_NAME=$(grep '^archives_base_name=' gradle.properties | cut -d'=' -f2)
        export MINECRAFT_VERSION=$(grep '^minecraft_version=' gradle.properties | cut -d'=' -f2)
        echo "MOD_VERSION_PACKAGE=$MOD_VERSION_PACKAGE" >> $GITHUB_ENV
        echo "MOD_NAME=$MOD_NAME" >> $GITHUB_ENV
        echo "MINECRAFT_VERSION=$MINECRAFT_VERSION" >> $GITHUB_ENV


    - name: Extract Commit Message
      id: get_commit_message
      run: |
        export COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/libs/${{env.MOD_NAME}}-${{env.MOD_VERSION_PACKAGE}}.jar
        asset_name: ${{env.MOD_NAME}}-${{env.MINECRAFT_VERSION}}-${{env.MOD_VERSION_PACKAGE}}-${{github.run_number}}.jar
        tag: Nightly-Build-${{env.MINECRAFT_VERSION}}-${{env.MOD_VERSION_PACKAGE}}-${{github.run_number}}
        overwrite: true
        body: "${{env.COMMIT_MESSAGE}}"

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
