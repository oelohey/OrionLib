# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Pull master branch
      uses: actions/checkout@v4
      with:
        ref: master
        path: repo-master
    - name: Pull releases branch
      uses: actions/checkout@v4
      with:
        ref: releases
        path: repo-releases
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build and Publish
      run: |

        cd repo-master

        bash ./gradlew build
        
        mod_version_package=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2)
        mod_name=$(grep '^archives_base_name=' gradle.properties | cut -d'=' -f2)
        minecraft_version=$(grep '^minecraft_version=' gradle.properties | cut -d'=' -f2)
        mod_version=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2 | cut -d'+' -f1)

        cd ..

        mkdir repo-releases/oelohey/orionlib/orion-lib/${minecraft_version}-${mod_version} -p

        cp repo-master/build/libs/${mod_name}-${mod_version_package}.jar repo-releases/oelohey/orionlib/orion-lib/${mod_version}-${minecraft_version}/${mod_name}-${mod_version_package}.jar

        cd repo-releases

        git config user.name "Github Actions"
        git config user.email "actions@github.com"

        git add .
        git commit -m "Upload for version ${mod_version} for minecraft ${minecraft_version}"

        git push origin releases

        
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
